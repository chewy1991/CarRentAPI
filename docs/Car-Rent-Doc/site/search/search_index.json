{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Car Rent Api Documentation Aufgabenstellung Zielsetzung Es soll ein Autovermietungssystem \"Car Rent\" erstellt werden. Das System soll aus einem Serverteil, welcher \u00fcber eine RestApi erreicht werden kann, und aus einem optionalen Webclient bestehen. Context Diagram Der Kunde kann bei einer Reservation ein Auto aus einer bestimmten Klasse w\u00e4hlen. Bei der Reservation muss er die Mietdauer und das Anfangsdatum angeben. Der Sachbearbeiter kann den Fuhrpark verwalten. Zudem kann er die Kunden im System verwalten und suchen. Container Diagram Die Webaplikation macht API calls zur RestApi \u00fcber welche Datenbankoperationen ausgef\u00fchrt werden. Je nach Aufruf werden Daten geschrieben oder gelesen. Component Diagram Der Kunde kann ein Auto ausw\u00e4hlen und eine Reservation t\u00e4tigen. Bei Abholung des Wagens muss der Kunde einen Vertrag unterschreiben. Die Reservation beinhaltet das ausgew\u00e4hlte Fahrzeug, das Reservationsdatum, die Mietdauer, die Gesamtkosten und der Mietzeitpunkt und den Reservationsstatus. Bei der Vertragserstellung \u00e4ndert der Reservationsstatus zu Contracted. Domain Diagram Use Cases UC1: Der Sachbearbeiter kann Kunden erfassen, l\u00f6schen bearbeiten und mittels Kundennummer oder Name suchen. UC2: Der Sachbearbeiter kann Autos verwalten und suchen. UC3: Jedes Auto besitzt eine Angabe bez\u00fcglich Klasse, Typ und Marke. Jedes Auto kann zudem eindeutig Identifiziert werden. UC4: Die Klasse bestimmt den Tagespreis. UC5: Bei der Reservation kann ein Auto aus einer bestimmten Klasse gew\u00e4hlt werden. Durch die Angabe der Reservationstage wird der Gesamtpreis berechnet. Der Reservationsstatus wird f\u00fcr den ausgew\u00e4hlten Reservationszeitraum auf reserviert gesetzt. UC6: Beim erstellen des Mietvertrags, wird der Reservationsstatus auf Contracted gewechselt. RestApi Daten \u00fcbergabewerte Die Daten werden gem\u00e4ss dem Domaindiagramm als json-Datei von der RestApi zur\u00fcckgegeben. Bei Fremdschl\u00fcssel werden die Id's der als fremdschl\u00fcssel\u00fcbergebenen Tabelle zur\u00fcckgegeben. Ausnahme Die R\u00fcckgabe des Contracts unterscheidet sich von den anderen. Hier werden die gejointen Werte zur\u00fcck gegeben und nicht nur die Fremdschl\u00fcssel Id. Daten\u00fcbergabe Die Daten werden von der RestApi in Form von json-Dateien \u00fcbernommen. Um die Tabellen zu verkn\u00fcpfen m\u00fcssen den entsprechenden Fremdschl\u00fcsselfelder die jeweiligen Id's der Daten aus der jeweiligen Tabelle \u00fcbergeben werden. Datenbank Die Datenbank wurde in Form eines Entity Frameworks umgesetzt. Das Entity Framework l\u00e4uft als InMemoryDatenbank, wodurch es die Daten nur w\u00e4hrend die RestApi l\u00e4uft h\u00e4lt. Dadurch werden beim Start der Api mehrere Beispieldaten \u00fcbergeben. Continuous Integration Die Continuous Integration wurde mittels einer Azure Pipeline umgesetzt. Diese Pipeline startet bei jedem Push in den Master-Branch von Git einen automatischen Build und f\u00fchrt die Tests durch.","title":"Car Rent Api Documentation"},{"location":"#car-rent-api-documentation","text":"","title":"Car Rent Api Documentation"},{"location":"#aufgabenstellung","text":"","title":"Aufgabenstellung"},{"location":"#zielsetzung","text":"Es soll ein Autovermietungssystem \"Car Rent\" erstellt werden. Das System soll aus einem Serverteil, welcher \u00fcber eine RestApi erreicht werden kann, und aus einem optionalen Webclient bestehen.","title":"Zielsetzung"},{"location":"#context-diagram","text":"Der Kunde kann bei einer Reservation ein Auto aus einer bestimmten Klasse w\u00e4hlen. Bei der Reservation muss er die Mietdauer und das Anfangsdatum angeben. Der Sachbearbeiter kann den Fuhrpark verwalten. Zudem kann er die Kunden im System verwalten und suchen.","title":"Context Diagram"},{"location":"#container-diagram","text":"Die Webaplikation macht API calls zur RestApi \u00fcber welche Datenbankoperationen ausgef\u00fchrt werden. Je nach Aufruf werden Daten geschrieben oder gelesen.","title":"Container Diagram"},{"location":"#component-diagram","text":"Der Kunde kann ein Auto ausw\u00e4hlen und eine Reservation t\u00e4tigen. Bei Abholung des Wagens muss der Kunde einen Vertrag unterschreiben. Die Reservation beinhaltet das ausgew\u00e4hlte Fahrzeug, das Reservationsdatum, die Mietdauer, die Gesamtkosten und der Mietzeitpunkt und den Reservationsstatus. Bei der Vertragserstellung \u00e4ndert der Reservationsstatus zu Contracted.","title":"Component Diagram"},{"location":"#domain-diagram","text":"","title":"Domain Diagram"},{"location":"#use-cases","text":"UC1: Der Sachbearbeiter kann Kunden erfassen, l\u00f6schen bearbeiten und mittels Kundennummer oder Name suchen. UC2: Der Sachbearbeiter kann Autos verwalten und suchen. UC3: Jedes Auto besitzt eine Angabe bez\u00fcglich Klasse, Typ und Marke. Jedes Auto kann zudem eindeutig Identifiziert werden. UC4: Die Klasse bestimmt den Tagespreis. UC5: Bei der Reservation kann ein Auto aus einer bestimmten Klasse gew\u00e4hlt werden. Durch die Angabe der Reservationstage wird der Gesamtpreis berechnet. Der Reservationsstatus wird f\u00fcr den ausgew\u00e4hlten Reservationszeitraum auf reserviert gesetzt. UC6: Beim erstellen des Mietvertrags, wird der Reservationsstatus auf Contracted gewechselt.","title":"Use Cases"},{"location":"#restapi","text":"","title":"RestApi"},{"location":"#daten-ubergabewerte","text":"Die Daten werden gem\u00e4ss dem Domaindiagramm als json-Datei von der RestApi zur\u00fcckgegeben. Bei Fremdschl\u00fcssel werden die Id's der als fremdschl\u00fcssel\u00fcbergebenen Tabelle zur\u00fcckgegeben.","title":"Daten \u00fcbergabewerte"},{"location":"#ausnahme","text":"Die R\u00fcckgabe des Contracts unterscheidet sich von den anderen. Hier werden die gejointen Werte zur\u00fcck gegeben und nicht nur die Fremdschl\u00fcssel Id.","title":"Ausnahme"},{"location":"#datenubergabe","text":"Die Daten werden von der RestApi in Form von json-Dateien \u00fcbernommen. Um die Tabellen zu verkn\u00fcpfen m\u00fcssen den entsprechenden Fremdschl\u00fcsselfelder die jeweiligen Id's der Daten aus der jeweiligen Tabelle \u00fcbergeben werden.","title":"Daten\u00fcbergabe"},{"location":"#datenbank","text":"Die Datenbank wurde in Form eines Entity Frameworks umgesetzt. Das Entity Framework l\u00e4uft als InMemoryDatenbank, wodurch es die Daten nur w\u00e4hrend die RestApi l\u00e4uft h\u00e4lt. Dadurch werden beim Start der Api mehrere Beispieldaten \u00fcbergeben.","title":"Datenbank"},{"location":"#continuous-integration","text":"Die Continuous Integration wurde mittels einer Azure Pipeline umgesetzt. Diese Pipeline startet bei jedem Push in den Master-Branch von Git einen automatischen Build und f\u00fchrt die Tests durch.","title":"Continuous Integration"}]}